{
    "swagger": "2.0",
    "info": {
        "version": "2.0.0",
        "title": "CAOM-2.0 Repository",
        "description": "The Common Archive Observation Model (CAOM) Metadata Repository.\n"
    },
    "host": "www.cadc-ccda.nrc-cnrc.gc.ca",
    "paths": {
        "/caom2repo/{observationURI}": {
            "get": {
                "description": "GET retrieves the observation as a CAOM-2.0 xml document\n",
                "tags": [
                    "CAOM2"
                ],
                "security": [
                    {
                        "userID": []
                    }
                ],
                "schemes": [
                    "http",
                    "https"
                ],
                "produces": [
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "title": "CAOM2 Observation",
                            "$ref": "#/definitions/Observation"
                        }
                    },
                    "400": {
                        "description": "(bad request) with the text \"invalid ObservationURI\" if a valid ObservationURI cannot be constructed from the requested path"
                    },
                    "403": {
                        "description": "(forbidden) if the caller does not have read permission"
                    },
                    "404": {
                        "description": "(not found) if the specified collection does not exist or the observation is not in the repository"
                    },
                    "500": {
                        "description": "Internal error"
                    },
                    "503": {
                        "description": "Service busy"
                    },
                    "default": {
                        "description": "Unexpeced error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "DELETE removes an existing observation from the repository and will fail (with a 404 \"not found\") if it does not exist.\n",
                "tags": [
                    "CAOM2"
                ],
                "security": [
                    {
                        "userID": []
                    }
                ],
                "schemes": [
                    "http",
                    "https"
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "404": {
                        "description": "(not found)"
                    },
                    "500": {
                        "description": "Internal error"
                    },
                    "503": {
                        "description": "Service busy"
                    },
                    "default": {
                        "description": "Unexpeced error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "observationURI",
                    "in": "path",
                    "description": "The URI of the target observation",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/caom2repo": {
            "post": {
                "description": "POST updates (replaces) an existing observation and will fail (with a 404 \"not found\") if it does not exist. The delivered content must be a CAOM-2.0 xml document.\n",
                "tags": [
                    "CAOM2"
                ],
                "security": [
                    {
                        "userID": []
                    }
                ],
                "schemes": [
                    "http",
                    "https"
                ],
                "consumes": [
                    "text/xml"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "An updated observation object.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Observation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "(bad request) with the text \"request path does not match ObservationURI\" if the path of URI in the document submitted does not match the path in the URL to which the document was posted"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "413": {
                        "description": "413 (too large) if the size of the document exceeds the 500Kb maximum imposed in this web service"
                    },
                    "500": {
                        "description": "Internal error"
                    },
                    "503": {
                        "description": "Service busy"
                    },
                    "default": {
                        "description": "Unexpeced error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "description": "PUT stores a new observation and will fail if it already exists. The delivered content must be a CAOM-2.0 xml document.\n",
                "tags": [
                    "CAOM2"
                ],
                "security": [
                    {
                        "userID": []
                    }
                ],
                "schemes": [
                    "http",
                    "https"
                ],
                "consumes": [
                    "text/xml"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "A new observation object.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Observation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "400": {
                        "description": "(bad request) with the text \"request path does not match ObservationURI\" if the path of URI in the document submitted does not match the path in the URL to which the document was posted"
                    },
                    "404": {
                        "description": "(not found) only if the collection does not exist, - 400 (bad request) with the text \"invalid XML\" if the submitted document is not valid (well-formedness and schema validation),"
                    },
                    "413": {
                        "description": "413 (too large) if the size of the document exceeds the 500Kb maximum imposed in this web service"
                    },
                    "500": {
                        "description": "Internal error"
                    },
                    "503": {
                        "description": "Service busy"
                    },
                    "default": {
                        "description": "Unexpeced error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/caom2repo/availability": {
            "get": {
                "tags": [
                    "Support Interfaces"
                ],
                "summary": "VOSI Availability",
                "description": "Indicates whether the service is operable and the reliability of the service for extended and scheduled requests.\n",
                "responses": {
                    "200": {
                        "description": "A VOSI availability document in XML.",
                        "schema": {
                            "$ref": "#/definitions/availability"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Observation": {
            "type": "object",
            "required": [
                "id"
            ],
            "description": "The Common Archive Observation Model (CAOM) is the core data model used across all collections at the Canadian Astronomy Data Centre (CADC).  This model supports data discovery via web-based user interfaces and International Virtual Observatory Aliance (IVOA) compliant Table Access Protocol (TAP) and Simple Image Access (SIA) web services.",
            "properties": {
                "id": {
                    "type": "string"
                },
                "planes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Plane"
                    }
                }
            }
        },
        "Plane": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "availability": {
            "type": "object",
            "xml": {
                "namespace": "http://www.ivoa.net/xml/VOSIAvailability/v1.0",
                "prefix": "vosi"
            },
            "properties": {
                "available": {
                    "type": "boolean",
                    "xml": {
                        "attribute": true,
                        "prefix": "vosi"
                    }
                },
                "note": {
                    "type": "string",
                    "xml": {
                        "attribute": true,
                        "prefix": "vosi"
                    }
                }
            }
        },
        "capabilities": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/capability"
            },
            "xml": {
                "namespace": "http://www.ivoa.net/xml/VOSICapabilities/v1.0",
                "prefix": "vosi",
                "wrapped": true
            }
        },
        "capability": {
            "type": "object",
            "properties": {
                "standardID": {
                    "type": "string",
                    "format": "uri",
                    "xml": {
                        "attribute": true
                    }
                },
                "interface": {
                    "type": "object",
                    "properties": {
                        "accessURL": {
                            "type": "string",
                            "properties": {
                                "use": {
                                    "type": "string",
                                    "xml": {
                                        "attribute": true
                                    }
                                }
                            }
                        },
                        "securityMethod": {
                            "type": "string",
                            "properties": {
                                "standardID": {
                                    "type": "string",
                                    "format": "uri",
                                    "xml": {
                                        "attribute": true
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "Error": {
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}
